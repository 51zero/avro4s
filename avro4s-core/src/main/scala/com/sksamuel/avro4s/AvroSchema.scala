package com.sksamuel.avro4s

import org.apache.avro.Schema

//object AvroSchema {
//
//  /**
//    * Creates an Avro Schema for an arbitrary type T.
//    *
//    * Requires an instance of [[SchemaFor]] which is usually
//    * generated by the avro4s macros.
//    *
//    * Usage:
//    *
//    * val schema = AvroSchema[MyType]
//    *
//    * An implicit [[FieldMapper]] can be provided to override
//    * how the field names are generated.
//    */
//  def apply[T](implicit schemaFor: SchemaFor[T]): Schema = schemaFor.resolveSchemaFor().schema
//
//}

object AvroSchema {

  /**
    * Generates an avro [[Schema]] for a type T using default configuration.
    */
  def apply[T](using schemaFor: SchemaFor[T]): Schema = apply(SchemaConfiguration.default)

  def apply[T](config: SchemaConfiguration)(using schemaFor: SchemaFor[T]): Schema =
    schemaFor.schema(config)
}
