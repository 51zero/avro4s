package com.sksamuel.avro4s

import org.apache.avro.Schema

//    *
//    * Requires an instance of [[SchemaFor]] which is usually
//    * generated by the avro4s macros.
//    *
//    *
//    * An implicit [[FieldMapper]] can be provided to override
//    * how the field names are generated.
//    */
//  def apply[T](implicit schemaFor: SchemaFor[T]): Schema = schemaFor.resolveSchemaFor().schema

/**
  * Creates an Avro Schema for an arbitrary type T.
  *
  * This type is called [[AvroSchema]] and not just [[Schema]] to facilitate easy
  * importing when mixing with [[org.apache.avro.Schema]].
  */
object AvroSchema {

  /**
    * Generates an [[org.apache.avro.Schema]] for a type T using default configuration.
    */
  def apply[T](using schemaFor: SchemaFor[T]): Schema = schemaFor.schema(SchemaConfiguration.default)

//  def apply[T](config: SchemaConfiguration)(using schemaFor: SchemaFor[T]): Schema =
//    schemaFor.schema(config)
}
